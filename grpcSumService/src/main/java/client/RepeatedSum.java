package client;

import com.example.grpc.RepeatedSumGrpc.*;
import com.example.grpc.Sum.*;
import io.grpc.stub.StreamObserver;

/**
 * Repeated Sum server class, extending the boilerplate code generated by the GRPC system for Java.
 */
public class RepeatedSum extends RepeatedSumImplBase {
    /**
     * Method that handles the computation of a sum repeated T times.
     * 
     * @param req The object is actually defined inside the .proto file.
     * @param streamObserver The StreamObserver class is used to generate events on the caller.
     * @see ../proto/Sum.proto
     */
    @Override
    public void streamRepeatedSum(RepeatedSumRequest req,
                                  StreamObserver<RepeatedSumResponse> streamObserver) {
        for(int i = 1; i <= req.getT(); ++i){
            RepeatedSumResponse response = RepeatedSumResponse.newBuilder()
                    .setSum(req.getN() * i)
                    .build();

            streamObserver.onNext(response);
        }
        streamObserver.onCompleted();
    }
}
